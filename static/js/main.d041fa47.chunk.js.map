{"version":3,"sources":["components/Generating/Generating.jsx","components/Encrypt/Encrypt.jsx","components/Decrypt/Decrypt.jsx","components/App.js","index.js"],"names":["Generating","useState","len","setLen","upper","setUpper","lower","setLower","number","setNumber","symbol","setSymbol","passwords","setPasswords","generateOneX","z","push","getUpper","getLower","getNumber","getSymbol","length","Math","floor","random","className","id","value","onClick","textarea","document","createElement","password","querySelector","body","appendChild","console","log","select","execCommand","remove","htmlFor","type","size","min","max","onChange","e","target","checked","pw","i","Encrypt","message","setMessage","encrypt","setEncrypt","myCipher","salt","textToChars","text","split","map","c","charCodeAt","byteHex","n","Number","toString","substr","applySaltToChar","code","reduce","a","b","join","cipher","cols","rows","style","opacity","placeholder","Decrypt","decrypt","setDecrypt","myDecipher","encoded","match","hex","parseInt","charCode","String","fromCharCode","decipher","App","StyledComponents","styled","div","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d041fa47.chunk.js","sourcesContent":["import React from 'react'\r\nimport './generating.css';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst uperLetter = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\nconst lowerLetter = \"abcdefghijklmnopqrstuvwxyz\";\r\nconst numbers = \"1234567890\";\r\nconst symbols = \"!@#$%^&*()_+\";\r\n\r\nexport default function Generating() {\r\n\r\n\r\n\r\n    const [len, setLen] = useState(15)\r\n    const [upper, setUpper] = useState(true)\r\n    const [lower, setLower] = useState(true)\r\n    const [number, setNumber] = useState(true)\r\n    const [symbol, setSymbol] = useState(true)\r\n    const [passwords, setPasswords] = useState('')\r\n    const generate = () => {\r\n        let pw = document.querySelector('.gen-textarea')\r\n        let password = '';\r\n        for(let i=0; i<len; i++) {\r\n            const x = generateOneX();\r\n            password += x;\r\n        }\r\n        pw.value = password\r\n        setPasswords(password)\r\n    }\r\n\r\n    const generateOneX = () => {\r\n        let z = [];\r\n        if(upper) {\r\n           z.push(getUpper());\r\n        }\r\n        if(lower) {\r\n           z.push(getLower());\r\n        }\r\n        if(number) {\r\n           z.push(getNumber());\r\n        }\r\n        if(symbol) {\r\n           z.push(getSymbol());\r\n        }\r\n        if(z.length===0) return '';\r\n        return z[Math.floor(Math.random() * z.length)]\r\n    };\r\n\r\n\r\n    const getUpper = () => {\r\n        return uperLetter[Math.floor(Math.random() * uperLetter.length)]\r\n    }\r\n    const getLower = () => {\r\n        return lowerLetter[Math.floor(Math.random() * lowerLetter.length)]\r\n    }\r\n    const getNumber = () => {\r\n        return numbers[Math.floor(Math.random() * numbers.length)]\r\n    }\r\n    const getSymbol = () => {\r\n        return symbols[Math.floor(Math.random() * symbols.length)]\r\n    }\r\n    const handleCopy = () => {\r\n\r\n        const textarea = document.createElement('textarea');\r\n        const password = document.querySelector('.gen-textarea').value\r\n        textarea.value = password\r\n        document.body.appendChild(textarea)\r\n        console.log(password)\r\n        textarea.select();\r\n        document.execCommand('copy');\r\n        textarea.remove();\r\n    }\r\n\r\n    return (\r\n        <div className=\"pw-container\">\r\n            <h2 className=\"password-generating\">Password generating</h2>\r\n            <div className=\"pw-header\">\r\n            <div className=\"pw dec\" id=\"pw\">\r\n                <textarea value={passwords?passwords:'password'} className=\"pw gen-textarea\" id=\"pw\"></textarea>\r\n            </div>\r\n            <button id=\"copy\" onClick={handleCopy}>Copy</button>\r\n            </div>\r\n           \r\n            <div className=\"pw-body\">\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"len\"> Password</label>\r\n                    <input className=\"input-number\" type=\"number\" size=\"8\" min=\"4\" max=\"40\" value={len} id=\"len\" onChange={(e)=> setLen(e.target.value)}/>\r\n                </div>    \r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"upper\"> Contain Uppercase letters</label>\r\n                    <input type=\"checkbox\" checked={upper} id=\"upper\" onChange={() =>setUpper(!upper)}/>\r\n                </div>    \r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"lower\"> Contain Lowercase Letters</label>\r\n                    <input type=\"checkbox\" id=\"lower\" checked={lower} onChange={() =>setLower(!lower)}/>\r\n                </div>    \r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"number\"> Contains Number</label>\r\n                    <input type=\"checkbox\" id=\"number\" checked={number} onChange={() =>setNumber(!number)}/>\r\n                </div>    \r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"symbol\">Contains Symbols</label>\r\n                    <input type=\"checkbox\" id=\"symbol\" checked={symbol} onChange={() =>setSymbol(!symbol)}/>\r\n                </div>    \r\n                <button className=\"generating\" onClick={generate}> Generate </button>\r\n            </div>            \r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport './encrypt.css';\r\n\r\nexport default function Encrypt() {\r\n\r\n    const [message,setMessage]=useState('');\r\n    const [encrypt, setEncrypt] = useState('');\r\n\r\n    const cipher = salt => {\r\n        const textToChars = text => text.split('').map(c => c.charCodeAt(0));\r\n        const byteHex = n => (\"0\" + Number(n).toString(16)).substr(-2);\r\n        const applySaltToChar = code => textToChars(salt).reduce((a,b) => a ^ b, code);\r\n    \r\n        return text => text.split('')\r\n            .map(textToChars)\r\n            .map(applySaltToChar)\r\n            .map(byteHex)\r\n            .join('');\r\n    }\r\n    const myCipher = cipher('mySecretSalt') //sol\r\n\r\n    const handleCopy = () => {\r\n        const textarea = document.createElement('textarea');\r\n        const password = document.querySelector('.enc-text').value\r\n        document.querySelector('.button-enc').style.opacity = 0\r\n        textarea.value = password\r\n        console.log(password)\r\n        document.body.appendChild(textarea)\r\n        textarea.select();\r\n        document.execCommand('copy');\r\n        textarea.remove();\r\n    }\r\n\r\n    return (\r\n        <div className=\"pw-container\">\r\n        <h2 className=\"password-generating\">Encrypt the message</h2>\r\n        <div className=\"pw-header\">\r\n            <div className=\"pw enc\" id=\"pw\">\r\n              <textarea className=\"enc-text\" value={encrypt?encrypt:\"encrypt\"} id=\"\" cols=\"30\" rows=\"10\"></textarea>  {}\r\n            </div>\r\n            <button id=\"copy\" className=\"button-enc\" onClick={handleCopy}>Copy</button>\r\n        </div>\r\n        <div className=\"encrypt-body\">\r\n            <div className=\"encrypt-form\">\r\n                <label htmlFor=\"text\"> Message <br/>\r\n                <textarea placeholder=\"text\" className=\"input-enc\" type=\"text\" size=\"20\" id=\"text\" onChange={(e)=> setMessage(e.target.value)}/>\r\n                </label>\r\n            </div>    \r\n               <br/>\r\n            <button className=\"generating plus\" onClick={()=>setEncrypt(myCipher(message))}> encrypt </button>\r\n        </div>            \r\n    </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport './decrypt.css';\r\nexport default function Decrypt() {\r\n\r\n    const [message,setMessage]=useState('');\r\n    const [decrypt, setDecrypt] = useState('');\r\n\r\n    const decipher = salt => {\r\n        if(message.length==0) return;\r\n        const textToChars = text => text.split('').map(c => c.charCodeAt(0));\r\n        const applySaltToChar = code => textToChars(salt).reduce((a,b) => a ^ b, code);\r\n        return encoded => encoded.match(/.{1,2}/g)\r\n            .map(hex => parseInt(hex, 16))\r\n            .map(applySaltToChar)\r\n            .map(charCode => String.fromCharCode(charCode))\r\n            .join('');\r\n    }\r\n    const myDecipher = decipher('mySecretSalt')\r\n\r\n    const handleCopy = () => {\r\n        const textarea = document.createElement('textarea');\r\n        const password = document.querySelector('.dnc-text').value\r\n        textarea.value = password\r\n        document.body.appendChild(textarea)\r\n        console.log(password)\r\n        textarea.select();\r\n        document.execCommand('copy');\r\n        textarea.remove();\r\n    }\r\n    return (\r\n        <div className=\"pw-container\">\r\n        <h2 className=\"password-generating\">Decrypt the message</h2>\r\n        <div className=\"pw-header\">\r\n            <div className=\"pw dec\" id=\"pw\">\r\n            <textarea className=\"dnc-text\" value={decrypt?decrypt:\"decrypt\"} id=\"\" cols=\"30\" rows=\"10\"></textarea>  {}\r\n            </div>\r\n            <button id=\"copy\" onClick={handleCopy}>Copy</button>\r\n        </div>\r\n        <div className=\"decrypt-body\">\r\n            <div className=\"decrypt-form\">\r\n                <label htmlFor=\"text\"> Message <br/>\r\n                <textarea placeholder=\"text\" className=\"input-dec\" value={message} type=\"textarea\" id=\"text\" onChange={(e)=> setMessage(e.target.value)}/>\r\n                </label>\r\n            </div>    \r\n               <br/>\r\n            <button className=\"generating plus\" onClick={()=>setDecrypt(myDecipher(message))}> decrypt </button>\r\n        </div>            \r\n    </div>\r\n    )}\r\n\r\n","import React from 'react';\nimport Generating from './Generating/Generating';\nimport Encrypt from './Encrypt/Encrypt';\nimport Decrypt from './Decrypt/Decrypt';\nimport styled from 'styled-components'\nfunction App() {\n  return (\n    <StyledComponents className=\"App\">\n        <Generating/>\n        <Encrypt/>\n        <Decrypt/>\n    </StyledComponents>\n  );\n}\n\nexport default App;\n\n\nconst StyledComponents = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-template-rows: 1fr;\n  grid-column-gap: 0px;\n  grid-row-gap: 0px;\n\n  @media(min-width: 1200px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}